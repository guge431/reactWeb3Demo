/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MyCoin, MyCoinInterface } from "../MyCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inital_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "myName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mySymbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b506040518060400160405280600c81526020017f48637a4552433230546f6b6500000000000000000000000000000000000000008152506040518060400160405280600381526020017f48435a000000000000000000000000000000000000000000000000000000000081525081600390816200008e9190620004a6565b508060049081620000a09190620004a6565b505050620000cd33670de0b6b3a7640000620f4240620000c19190620005b7565b620000d360201b60201c565b620006e5565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000144576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200013b906200065f565b60405180910390fd5b620001575f83836200023860201b60201c565b8060025f8282546200016a91906200067f565b92505081905550805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002199190620006ca565b60405180910390a3620002345f83836200023d60201b60201c565b5050565b505050565b505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002be57607f821691505b602082108103620002d457620002d362000279565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002fb565b620003448683620002fb565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200038e6200038862000382846200035c565b62000365565b6200035c565b9050919050565b5f819050919050565b620003a9836200036e565b620003c1620003b88262000395565b84845462000307565b825550505050565b5f90565b620003d7620003c9565b620003e48184846200039e565b505050565b5b818110156200040b57620003ff5f82620003cd565b600181019050620003ea565b5050565b601f8211156200045a576200042481620002da565b6200042f84620002ec565b810160208510156200043f578190505b620004576200044e85620002ec565b830182620003e9565b50505b505050565b5f82821c905092915050565b5f6200047c5f19846008026200045f565b1980831691505092915050565b5f6200049683836200046b565b9150826002028217905092915050565b620004b18262000242565b67ffffffffffffffff811115620004cd57620004cc6200024c565b5b620004d98254620002a6565b620004e68282856200040f565b5f60209050601f8311600181146200051c575f841562000507578287015190505b62000513858262000489565b86555062000582565b601f1984166200052c86620002da565b5f5b8281101562000555578489015182556001820191506020850194506020810190506200052e565b8683101562000575578489015162000571601f8916826200046b565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f620005c3826200035c565b9150620005d0836200035c565b9250828202620005e0816200035c565b91508282048414831517620005fa57620005f96200058a565b5b5092915050565b5f82825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f2061646472657373005f82015250565b5f62000647601f8362000601565b9150620006548262000611565b602082019050919050565b5f6020820190508181035f830152620006788162000639565b9050919050565b5f6200068b826200035c565b915062000698836200035c565b9250828201905080821115620006b357620006b26200058a565b5b92915050565b620006c4816200035c565b82525050565b5f602082019050620006df5f830184620006b9565b92915050565b6112d380620006f35f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a578063a9059cbb11610064578063a9059cbb14610272578063d57ed54c146102a2578063dd62ed3e146102c0578063fae2dd4b146102f0576100e8565b806370a08231146101f457806395d89b4114610224578063a457c2d714610242576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806339509351146101a65780635f955976146101d6576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f461030e565b6040516101019190610bed565b60405180910390f35b610124600480360381019061011f9190610c9e565b61039e565b6040516101319190610cf6565b60405180910390f35b6101426103c0565b60405161014f9190610d1e565b60405180910390f35b610172600480360381019061016d9190610d37565b6103c9565b60405161017f9190610cf6565b60405180910390f35b6101906103f7565b60405161019d9190610da2565b60405180910390f35b6101c060048036038101906101bb9190610c9e565b6103fb565b6040516101cd9190610cf6565b60405180910390f35b6101de610431565b6040516101eb9190610d1e565b60405180910390f35b61020e60048036038101906102099190610dbb565b610438565b60405161021b9190610d1e565b60405180910390f35b61022c61047d565b6040516102399190610bed565b60405180910390f35b61025c60048036038101906102579190610c9e565b61050d565b6040516102699190610cf6565b60405180910390f35b61028c60048036038101906102879190610c9e565b610582565b6040516102999190610cf6565b60405180910390f35b6102aa6105a4565b6040516102b79190610bed565b60405180910390f35b6102da60048036038101906102d59190610de6565b6105dd565b6040516102e79190610d1e565b60405180910390f35b6102f861065f565b6040516103059190610bed565b60405180910390f35b60606003805461031d90610e51565b80601f016020809104026020016040519081016040528092919081815260200182805461034990610e51565b80156103945780601f1061036b57610100808354040283529160200191610394565b820191905f5260205f20905b81548152906001019060200180831161037757829003601f168201915b5050505050905090565b5f806103a8610698565b90506103b581858561069f565b600191505092915050565b5f600254905090565b5f806103d3610698565b90506103e0858285610862565b6103eb8585856108ed565b60019150509392505050565b5f90565b5f80610405610698565b905061042681858561041785896105dd565b6104219190610eae565b61069f565b600191505092915050565b620f424081565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461048c90610e51565b80601f01602080910402602001604051908101604052809291908181526020018280546104b890610e51565b80156105035780601f106104da57610100808354040283529160200191610503565b820191905f5260205f20905b8154815290600101906020018083116104e657829003601f168201915b5050505050905090565b5f80610517610698565b90505f61052482866105dd565b905083811015610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610f51565b60405180910390fd5b610576828686840361069f565b60019250505092915050565b5f8061058c610698565b90506105998185856108ed565b600191505092915050565b6040518060400160405280600381526020017f48435a000000000000000000000000000000000000000000000000000000000081525081565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6040518060400160405280600c81526020017f48637a4552433230546f6b65000000000000000000000000000000000000000081525081565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361070d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070490610fdf565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107729061106d565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108559190610d1e565b60405180910390a3505050565b5f61086d84846105dd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108e757818110156108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d0906110d5565b60405180910390fd5b6108e6848484840361069f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290611163565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c0906111f1565b60405180910390fd5b6109d4838383610b59565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e9061127f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b409190610d1e565b60405180910390a3610b53848484610b5e565b50505050565b505050565b505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610b9a578082015181840152602081019050610b7f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bbf82610b63565b610bc98185610b6d565b9350610bd9818560208601610b7d565b610be281610ba5565b840191505092915050565b5f6020820190508181035f830152610c058184610bb5565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c3a82610c11565b9050919050565b610c4a81610c30565b8114610c54575f80fd5b50565b5f81359050610c6581610c41565b92915050565b5f819050919050565b610c7d81610c6b565b8114610c87575f80fd5b50565b5f81359050610c9881610c74565b92915050565b5f8060408385031215610cb457610cb3610c0d565b5b5f610cc185828601610c57565b9250506020610cd285828601610c8a565b9150509250929050565b5f8115159050919050565b610cf081610cdc565b82525050565b5f602082019050610d095f830184610ce7565b92915050565b610d1881610c6b565b82525050565b5f602082019050610d315f830184610d0f565b92915050565b5f805f60608486031215610d4e57610d4d610c0d565b5b5f610d5b86828701610c57565b9350506020610d6c86828701610c57565b9250506040610d7d86828701610c8a565b9150509250925092565b5f60ff82169050919050565b610d9c81610d87565b82525050565b5f602082019050610db55f830184610d93565b92915050565b5f60208284031215610dd057610dcf610c0d565b5b5f610ddd84828501610c57565b91505092915050565b5f8060408385031215610dfc57610dfb610c0d565b5b5f610e0985828601610c57565b9250506020610e1a85828601610c57565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610e6857607f821691505b602082108103610e7b57610e7a610e24565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610eb882610c6b565b9150610ec383610c6b565b9250828201905080821115610edb57610eda610e81565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f775f8201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b5f610f3b602583610b6d565b9150610f4682610ee1565b604082019050919050565b5f6020820190508181035f830152610f6881610f2f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f206164645f8201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b5f610fc9602483610b6d565b9150610fd482610f6f565b604082019050919050565b5f6020820190508181035f830152610ff681610fbd565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f2061646472655f8201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b5f611057602283610b6d565b915061106282610ffd565b604082019050919050565b5f6020820190508181035f8301526110848161104b565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000005f82015250565b5f6110bf601d83610b6d565b91506110ca8261108b565b602082019050919050565b5f6020820190508181035f8301526110ec816110b3565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f2061645f8201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b5f61114d602583610b6d565b9150611158826110f3565b604082019050919050565b5f6020820190508181035f83015261117a81611141565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f20616464725f8201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b5f6111db602383610b6d565b91506111e682611181565b604082019050919050565b5f6020820190508181035f830152611208816111cf565b9050919050565b7f45524332303a207472616e7366657220616d6f756e74206578636565647320625f8201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b5f611269602683610b6d565b91506112748261120f565b604082019050919050565b5f6020820190508181035f8301526112968161125d565b905091905056fea2646970667358221220f86481bfdeac5ee2402ab67bffbb37c5d4777295e07c0666e14dd4ab110c1dc264736f6c63430008150033";

type MyCoinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyCoinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyCoin__factory extends ContractFactory {
  constructor(...args: MyCoinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyCoin & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyCoin__factory {
    return super.connect(runner) as MyCoin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyCoinInterface {
    return new Interface(_abi) as MyCoinInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyCoin {
    return new Contract(address, _abi, runner) as unknown as MyCoin;
  }
}
