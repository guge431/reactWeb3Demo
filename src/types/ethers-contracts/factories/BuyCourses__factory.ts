/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { BuyCourses, BuyCoursesInterface } from "../BuyCourses";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "CourseAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
    ],
    name: "CoursePurchased",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "courseCountId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "courses",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "teacher",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "hasPurchased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hczToken",
    outputs: [
      {
        internalType: "contract MyCoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_teacher",
        type: "address",
      },
    ],
    name: "addCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_courseId",
        type: "uint256",
      },
    ],
    name: "purchaseCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_courseId",
        type: "uint256",
      },
    ],
    name: "getCourse",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "teacher",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_courseId",
        type: "uint256",
      },
    ],
    name: "hasUserPurchased",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b5060405162001bb838038062001bb8833981810160405281019062000036919062000122565b3360015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000ec82620000c1565b9050919050565b620000fe81620000e0565b811462000109575f80fd5b50565b5f815190506200011c81620000f3565b92915050565b5f602082840312156200013a5762000139620000bd565b5b5f62000149848285016200010c565b91505092915050565b611a5880620001605f395ff3fe608060405234801561000f575f80fd5b506004361061009c575f3560e01c8063c28bdc9b11610064578063c28bdc9b14610185578063cd131938146101a1578063f851a440146101bd578063fc0c546a146101db578063fc2d5f99146101f95761009c565b80630b91e28d146100a05780630cf1b4ac146100d357806311923132146100f15780631198a6301461012157806396f979d214610151575b5f80fd5b6100ba60048036038101906100b59190610e10565b610217565b6040516100ca9493929190610f13565b60405180910390f35b6100db6103e7565b6040516100e89190610fbf565b60405180910390f35b61010b60048036038101906101069190611002565b61040c565b604051610118919061105a565b60405180910390f35b61013b60048036038101906101369190611002565b610436565b604051610148919061105a565b60405180910390f35b61016b60048036038101906101669190610e10565b610498565b60405161017c959493929190611073565b60405180910390f35b61019f600480360381019061019a91906111fe565b6105f5565b005b6101bb60048036038101906101b69190610e10565b6107b7565b005b6101c5610d7e565b6040516101d2919061129a565b60405180910390f35b6101e3610da3565b6040516101f091906112d3565b60405180910390f35b610201610dc6565b60405161020e91906112ec565b60405180910390f35b6060805f805f60045f8781526020019081526020015f206040518060a00160405290815f820154815260200160018201805461025290611332565b80601f016020809104026020016040519081016040528092919081815260200182805461027e90611332565b80156102c95780601f106102a0576101008083540402835291602001916102c9565b820191905f5260205f20905b8154815290600101906020018083116102ac57829003601f168201915b505050505081526020016002820180546102e290611332565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90611332565b80156103595780601f1061033057610100808354040283529160200191610359565b820191905f5260205f20905b81548152906001019060200180831161033c57829003601f168201915b5050505050815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080602001518160400151826060015183608001519450945094509450509193509193565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16905092915050565b6004602052805f5260405f205f91509050805f0154908060010180546104bd90611332565b80601f01602080910402602001604051908101604052809291908181526020018280546104e990611332565b80156105345780601f1061050b57610100808354040283529160200191610534565b820191905f5260205f20905b81548152906001019060200180831161051757829003601f168201915b50505050509080600201805461054990611332565b80601f016020809104026020016040519081016040528092919081815260200182805461057590611332565b80156105c05780601f10610597576101008083540402835291602001916105c0565b820191905f5260205f20905b8154815290600101906020018083116105a357829003601f168201915b505050505090806003015490806004015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b906113ac565b60405180910390fd5b6040518060a0016040528060035481526020018581526020018481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff1681525060045f60035481526020019081526020015f205f820151815f015560208201518160010190816106f3919061155e565b506040820151816002019081610709919061155e565b50606082015181600301556080820151816004015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f408bd38fab55422dd8e6b059c527441102dfdedd8f00efe28b2b851e3a37331560035485846040516107929392919061162d565b60405180910390a160035f8154809291906107ac90611696565b919050555050505050565b5f60045f8381526020019081526020015f206040518060a00160405290815f82015481526020016001820180546107ed90611332565b80601f016020809104026020016040519081016040528092919081815260200182805461081990611332565b80156108645780601f1061083b57610100808354040283529160200191610864565b820191905f5260205f20905b81548152906001019060200180831161084757829003601f168201915b5050505050815260200160028201805461087d90611332565b80601f01602080910402602001604051908101604052809291908181526020018280546108a990611332565b80156108f45780601f106108cb576101008083540402835291602001916108f4565b820191905f5260205f20905b8154815290600101906020018083116108d757829003601f168201915b5050505050815260200160038201548152602001600482015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090505f816020015151116109a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099c90611727565b60405180910390fd5b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff1615610a3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a359061178f565b60405180910390fd5b80606001515f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610a9b919061129a565b602060405180830381865afa158015610ab6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ada91906117c1565b1015610b1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1290611836565b60405180910390fd5b80606001515f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610b7a929190611854565b602060405180830381865afa158015610b95573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb991906117c1565b1015610bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf1906118eb565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33836080015184606001516040518463ffffffff1660e01b8152600401610c5e93929190611909565b6020604051808303815f875af1158015610c7a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c9e9190611968565b610cdd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd4906119dd565b60405180910390fd5b600160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8481526020019081526020015f205f6101000a81548160ff0219169083151502179055507fe5ad1c2d1ba3b171c8cd1cab50ec342a17e4c839c0562afe6328e29c7f38385e3383604051610d729291906119fb565b60405180910390a15050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610def81610ddd565b8114610df9575f80fd5b50565b5f81359050610e0a81610de6565b92915050565b5f60208284031215610e2557610e24610dd5565b5b5f610e3284828501610dfc565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610e72578082015181840152602081019050610e57565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610e9782610e3b565b610ea18185610e45565b9350610eb1818560208601610e55565b610eba81610e7d565b840191505092915050565b610ece81610ddd565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610efd82610ed4565b9050919050565b610f0d81610ef3565b82525050565b5f6080820190508181035f830152610f2b8187610e8d565b90508181036020830152610f3f8186610e8d565b9050610f4e6040830185610ec5565b610f5b6060830184610f04565b95945050505050565b5f819050919050565b5f610f87610f82610f7d84610ed4565b610f64565b610ed4565b9050919050565b5f610f9882610f6d565b9050919050565b5f610fa982610f8e565b9050919050565b610fb981610f9f565b82525050565b5f602082019050610fd25f830184610fb0565b92915050565b610fe181610ef3565b8114610feb575f80fd5b50565b5f81359050610ffc81610fd8565b92915050565b5f806040838503121561101857611017610dd5565b5b5f61102585828601610fee565b925050602061103685828601610dfc565b9150509250929050565b5f8115159050919050565b61105481611040565b82525050565b5f60208201905061106d5f83018461104b565b92915050565b5f60a0820190506110865f830188610ec5565b81810360208301526110988187610e8d565b905081810360408301526110ac8186610e8d565b90506110bb6060830185610ec5565b6110c86080830184610f04565b9695505050505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61111082610e7d565b810181811067ffffffffffffffff8211171561112f5761112e6110da565b5b80604052505050565b5f611141610dcc565b905061114d8282611107565b919050565b5f67ffffffffffffffff82111561116c5761116b6110da565b5b61117582610e7d565b9050602081019050919050565b828183375f83830152505050565b5f6111a261119d84611152565b611138565b9050828152602081018484840111156111be576111bd6110d6565b5b6111c9848285611182565b509392505050565b5f82601f8301126111e5576111e46110d2565b5b81356111f5848260208601611190565b91505092915050565b5f805f806080858703121561121657611215610dd5565b5b5f85013567ffffffffffffffff81111561123357611232610dd9565b5b61123f878288016111d1565b945050602085013567ffffffffffffffff8111156112605761125f610dd9565b5b61126c878288016111d1565b935050604061127d87828801610dfc565b925050606061128e87828801610fee565b91505092959194509250565b5f6020820190506112ad5f830184610f04565b92915050565b5f6112bd82610f8e565b9050919050565b6112cd816112b3565b82525050565b5f6020820190506112e65f8301846112c4565b92915050565b5f6020820190506112ff5f830184610ec5565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061134957607f821691505b60208210810361135c5761135b611305565b5b50919050565b7f4f6e6c79206f776e65722063616e20646f2074686973000000000000000000005f82015250565b5f611396601683610e45565b91506113a182611362565b602082019050919050565b5f6020820190508181035f8301526113c38161138a565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026114267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826113eb565b61143086836113eb565b95508019841693508086168417925050509392505050565b5f61146261145d61145884610ddd565b610f64565b610ddd565b9050919050565b5f819050919050565b61147b83611448565b61148f61148782611469565b8484546113f7565b825550505050565b5f90565b6114a3611497565b6114ae818484611472565b505050565b5b818110156114d1576114c65f8261149b565b6001810190506114b4565b5050565b601f821115611516576114e7816113ca565b6114f0846113dc565b810160208510156114ff578190505b61151361150b856113dc565b8301826114b3565b50505b505050565b5f82821c905092915050565b5f6115365f198460080261151b565b1980831691505092915050565b5f61154e8383611527565b9150826002028217905092915050565b61156782610e3b565b67ffffffffffffffff8111156115805761157f6110da565b5b61158a8254611332565b6115958282856114d5565b5f60209050601f8311600181146115c6575f84156115b4578287015190505b6115be8582611543565b865550611625565b601f1984166115d4866113ca565b5f5b828110156115fb578489015182556001820191506020850194506020810190506115d6565b868310156116185784890151611614601f891682611527565b8355505b6001600288020188555050505b505050505050565b5f6060820190506116405f830186610ec5565b81810360208301526116528185610e8d565b90506116616040830184610ec5565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116a082610ddd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116d2576116d1611669565b5b600182019050919050565b7f436f7572736520646f6573206e6f7420657869737400000000000000000000005f82015250565b5f611711601583610e45565b915061171c826116dd565b602082019050919050565b5f6020820190508181035f83015261173e81611705565b9050919050565b7f416c7265616479207075726368617365640000000000000000000000000000005f82015250565b5f611779601183610e45565b915061178482611745565b602082019050919050565b5f6020820190508181035f8301526117a68161176d565b9050919050565b5f815190506117bb81610de6565b92915050565b5f602082840312156117d6576117d5610dd5565b5b5f6117e3848285016117ad565b91505092915050565b7f4e6f7420656e6f75676820746f6b656e2062616c616e636500000000000000005f82015250565b5f611820601883610e45565b915061182b826117ec565b602082019050919050565b5f6020820190508181035f83015261184d81611814565b9050919050565b5f6040820190506118675f830185610f04565b6118746020830184610f04565b9392505050565b7f436f6e7472616374206e6f7420617070726f76656420746f207370656e6420795f8201527f6f757220746f6b656e7300000000000000000000000000000000000000000000602082015250565b5f6118d5602a83610e45565b91506118e08261187b565b604082019050919050565b5f6020820190508181035f830152611902816118c9565b9050919050565b5f60608201905061191c5f830186610f04565b6119296020830185610f04565b6119366040830184610ec5565b949350505050565b61194781611040565b8114611951575f80fd5b50565b5f815190506119628161193e565b92915050565b5f6020828403121561197d5761197c610dd5565b5b5f61198a84828501611954565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f6119c7601583610e45565b91506119d282611993565b602082019050919050565b5f6020820190508181035f8301526119f4816119bb565b9050919050565b5f604082019050611a0e5f830185610f04565b611a1b6020830184610ec5565b939250505056fea2646970667358221220ccba551719a43e4bb63a26ef64de9d672cc697219a9c00fbaf652821685ff54964736f6c63430008150033";

type BuyCoursesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuyCoursesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuyCourses__factory extends ContractFactory {
  constructor(...args: BuyCoursesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenAddress, overrides || {});
  }
  override deploy(
    _tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenAddress, overrides || {}) as Promise<
      BuyCourses & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BuyCourses__factory {
    return super.connect(runner) as BuyCourses__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuyCoursesInterface {
    return new Interface(_abi) as BuyCoursesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): BuyCourses {
    return new Contract(address, _abi, runner) as unknown as BuyCourses;
  }
}
